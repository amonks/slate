# Architecture

## Goals

The gifbooth architecture has one primary design goal -- flexibility, especially through the following means:

* Code sharing
* Modularity
* Well-defined client responsibilities

We should be able to:

* Write image processes one time (bullet time, 3d, new shaders, ???) and have them work on any existing and potential clients.
* Quickly compose new clients from existing modules.
* Develop clients for environments with a wide range of capabilities: a website, a mobile app, a desktop app, or even videos sent in by MMS.
* Update one module and automatically pull the update into multiple clients.
* Scale: if a customer wants 10 booths, or if we run multiple events at once it shouldn't be a problem.

## Structure

This directed graph indicates which components talk to // know about which other components. For example, users know about and manipulate the website and the booth itself. By centralizing as much functionality in the server as possible, *it* can manipulate many resources but other components only have to manipulate *it*.

<% graphviz do %>
digraph {
  users;
  pablo;

  subgraph cluster_clients {
    label="clients";
    website;
    booth;
    admin;
  }

  subgraph cluster_social {
    label="social";
    facebook;
    twitter;
    etc;
  }

  subgraph cluster_cloud {
    label="cloud";
    website;
    server;
    s3;
    database;
  }


  admin   -> server;
  users    -> website;
  users    -> booth;
  pablo   -> admin;

  server  -> facebook;
  server  -> twitter;
  server  -> etc;

  booth   -> server;
  website -> server;
  booth   -> s3;
  website -> s3;
  server  -> s3;
  admin   -> s3;
  server  -> database;
}
<% end %>
